# Generated by Django 4.2.8 on 2024-02-11 17:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_points', models.FloatField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'Assignment',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'Course',
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=100)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'File',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=15)),
                ('mail', models.EmailField(max_length=254)),
            ],
            options={
                'db_table': 'Person',
            },
        ),
        migrations.CreateModel(
            name='PersonType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'PersonType',
            },
        ),
        migrations.CreateModel(
            name='RoleOnCourseType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'RoleOnCourseType',
            },
        ),
        migrations.CreateModel(
            name='TaskType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'TaskType',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('text', models.TextField()),
                ('files', models.ManyToManyField(db_table='FileForTask', to='lms_api.file')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='lms_api.tasktype')),
            ],
            options={
                'db_table': 'Task',
            },
        ),
        migrations.CreateModel(
            name='RoleOnCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms_api.course')),
                ('person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms_api.person')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='lms_api.roleoncoursetype')),
            ],
            options={
                'db_table': 'RoleOnCourse',
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submit_date', models.DateTimeField()),
                ('points', models.FloatField()),
                ('assignment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms_api.assignment')),
                ('files', models.ManyToManyField(db_table='FileForResult', to='lms_api.file')),
                ('person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms_api.person')),
            ],
            options={
                'db_table': 'Result',
            },
        ),
        migrations.AddField(
            model_name='person',
            name='courses',
            field=models.ManyToManyField(through='lms_api.RoleOnCourse', to='lms_api.course'),
        ),
        migrations.AddField(
            model_name='person',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='lms_api.persontype'),
        ),
        migrations.AddField(
            model_name='file',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms_api.person'),
        ),
        migrations.AddField(
            model_name='course',
            name='files',
            field=models.ManyToManyField(db_table='FileForCourse', to='lms_api.file'),
        ),
        migrations.AddField(
            model_name='course',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms_api.person'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='assigner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms_api.person'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='course',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms_api.course'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='role_on_course_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms_api.roleoncoursetype'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='task',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms_api.task'),
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('text', models.TextField()),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms_api.course')),
                ('files', models.ManyToManyField(db_table='FileForAnnouncement', to='lms_api.file')),
                ('sender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms_api.person')),
            ],
            options={
                'db_table': 'Announcement',
            },
        ),
    ]
