# Generated by Django 4.2.8 on 2024-02-11 17:53

from django.db import migrations


def fill_db(apps, schema_editor):
    PersonType = apps.get_model("lms_api", "PersonType")

    person_type_student = PersonType.objects.create(type="Студент")
    person_type_teacher = PersonType.objects.create(type="Преподаватель")

    """Person"""
    Person = apps.get_model("lms_api", "Person")

    """Преподаватели"""
    person_teacher1 = Person.objects.create(first_name="Иван", last_name="Иванов", middle_name="Иванович",
                                            phone="89253457625",
                                            mail="ivan@ivan.ru", type=person_type_teacher)
    person_teacher2 = Person.objects.create(first_name="Егор", last_name="Смирнов", middle_name="Владимирович",
                                            phone="89253147285",
                                            mail="egor@mail.ru", type=person_type_teacher)
    person_teacher3 = Person.objects.create(first_name="Александр", last_name="Мориков", middle_name="Викторович",
                                            phone="89252839174",
                                            mail="sasha@mail.ru", type=person_type_teacher)
    """Студенты"""
    person_student1 = Person.objects.create(first_name="Артем", last_name="Артемов", middle_name="Егорович",
                                            phone="89251235712",
                                            mail="artem@gmail.ru", type=person_type_student)
    person_student2 = Person.objects.create(first_name="Игорь", last_name="Игорев", middle_name="Игорович",
                                            phone="89251267890",
                                            mail="igor@gmail.ru", type=person_type_student)
    person_student3 = Person.objects.create(first_name="Рулон", last_name="Обоев", middle_name="Артемович",
                                            phone="89251213826",
                                            mail="rulon@gmail.ru", type=person_type_student)

    """Courses"""
    Course = apps.get_model("lms_api", "Course")

    course1 = Course.objects.create(name="Математика", start_date="2023-12-11", end_date="2024-5-20",
                                    owner=person_teacher1)
    course2 = Course.objects.create(name="Методы оптимизации", start_date="2023-9-1", end_date="2023-12-20",
                                    owner=person_teacher2)
    course3 = Course.objects.create(name="Безопасность жизнедеятельности", start_date="2023-9-1", end_date="2023-12-20",
                                    owner=person_teacher3)

    """RoleOnCourseType"""
    RoleOnCourseType = apps.get_model("lms_api", "RoleOnCourseType")

    role_on_course_type_lecturer = RoleOnCourseType.objects.create(type="Лектор")
    role_on_course_type_seminarist = RoleOnCourseType.objects.create(type="Семинарист")
    role_on_course_type_assistant = RoleOnCourseType.objects.create(type="Ассистент")
    role_on_course_type_group1 = RoleOnCourseType.objects.create(type="БИСТ-21-4")
    role_on_course_type_group2 = RoleOnCourseType.objects.create(type="БИСТ-21-5")
    role_on_course_type_group3 = RoleOnCourseType.objects.create(type="БИВТ-20-7")

    """RoleOnCourse"""
    RoleOnCourse = apps.get_model("lms_api", "RoleOnCourse")

    role_on_course1 = RoleOnCourse.objects.create(type=role_on_course_type_lecturer, person=person_teacher1,
                                                  course=course1)
    role_on_course2 = RoleOnCourse.objects.create(type=role_on_course_type_seminarist, person=person_teacher1,
                                                  course=course1)
    role_on_course3 = RoleOnCourse.objects.create(type=role_on_course_type_group1, person=person_student1,
                                                  course=course1)
    role_on_course4 = RoleOnCourse.objects.create(type=role_on_course_type_assistant, person=person_teacher2,
                                                  course=course1)

    role_on_course5 = RoleOnCourse.objects.create(type=role_on_course_type_lecturer, person=person_teacher2,
                                                  course=course2)
    role_on_course6 = RoleOnCourse.objects.create(type=role_on_course_type_group3, person=person_student2,
                                                  course=course2)
    role_on_course7 = RoleOnCourse.objects.create(type=role_on_course_type_group2, person=person_student3,
                                                  course=course2)

    role_on_course8 = RoleOnCourse(type=role_on_course_type_seminarist, person=person_teacher3, course=course3)

    """TaskType"""
    TaskType = apps.get_model("lms_api", "TaskType")

    task_type1 = TaskType.objects.create(type="Лабораторная")
    task_type2 = TaskType.objects.create(type="Практика")
    task_type3 = TaskType.objects.create(type="Дополнительное")

    """Task"""
    Task = apps.get_model("lms_api", "Task")

    task1 = Task.objects.create(title="ЛР1", text="Выполнить лабораторную работу 1 и сдать в срок", type=task_type1)
    task2 = Task.objects.create(title="ЛР2", text="Выполнить лабораторную работу 2 с использованием доп литературы",
                                type=task_type1)
    task3 = Task.objects.create(title="Практика 1", text="Выбрать вариант в соответствии с номером в журнале!",
                                type=task_type2)
    task4 = Task.objects.create(title="Повышение оценки", text="Подготтовить реферат на 15 страниц и защитить",
                                type=task_type3)
    task5 = Task.objects.create(title="Пр 3", text="Задание в файле", type=task_type2)
    task6 = Task.objects.create(title="Пр 8", text="см записи лекции", type=task_type2)

    """Assignment"""
    Assignment = apps.get_model("lms_api", "Assignment")

    assignment1 = Assignment.objects.create(max_points=10, start_date="2024-1-1", end_date="2024-1-14",
                                            assigner=person_teacher1, task=task1,
                                            role_on_course_type=role_on_course_type_group1, course=course1)

    assignment2 = Assignment.objects.create(max_points=5, start_date="2023-9-12", end_date="2023-9-21",
                                            assigner=person_teacher2, task=task2,
                                            role_on_course_type=role_on_course_type_group1, course=course2)
    assignment3 = Assignment.objects.create(max_points=5, start_date="2023-9-12", end_date="2023-9-21",
                                            assigner=person_teacher2, task=task2,
                                            role_on_course_type=role_on_course_type_group2, course=course2)
    assignment4 = Assignment.objects.create(max_points=5, start_date="2023-9-12", end_date="2023-9-21",
                                            assigner=person_teacher2, task=task2,
                                            role_on_course_type=role_on_course_type_group3, course=course2)

    assignment5 = Assignment.objects.create(max_points=5, start_date="2023-9-15", end_date="2023-9-22",
                                            assigner=person_teacher3, task=task3,
                                            role_on_course_type=role_on_course_type_group3, course=course3)

    assignment6 = Assignment.objects.create(max_points=15, start_date="2024-2-7", end_date="2024-3-10",
                                            assigner=person_teacher1, task=task4,
                                            role_on_course_type=role_on_course_type_group1, course=course1)
    assignment7 = Assignment.objects.create(max_points=5, start_date="2023-11-7", end_date="2023-11-21",
                                            assigner=person_teacher2, task=task5,
                                            role_on_course_type=role_on_course_type_group2, course=course2)
    assignment8 = Assignment.objects.create(max_points=5, start_date="2023-12-7", end_date="2023-12-14",
                                            assigner=person_teacher3, task=task6,
                                            role_on_course_type=role_on_course_type_group3, course=course3)

    """Result"""
    Result = apps.get_model("lms_api", "Result")

    result1 = Result.objects.create(submit_date="2024-1-7", points=10, person=person_student1, assignment=assignment1)
    result2 = Result.objects.create(submit_date="2023-9-20", points=5, person=person_student1, assignment=assignment2)
    result3 = Result.objects.create(submit_date="2023-9-17", points=5, person=person_student3, assignment=assignment3)
    result4 = Result.objects.create(submit_date="2023-9-21", points=5, person=person_student2, assignment=assignment5)

    """File"""
    File = apps.get_model("lms_api", "File")

    file1 = File.objects.create(path="/files/file1", created_date="2023-9-12", updated_date="2023-9-12",
                                owner=person_student1)  # FileForResult1
    file2 = File.objects.create(path="/files/file2", created_date="2023-8-23", updated_date="2023-9-11",
                                owner=person_teacher1)  # FileForTask1
    file3 = File.objects.create(path="/files/file3", created_date="2023-8-11", updated_date="2023-8-11",
                                owner=person_teacher3)  # FileForCourse1
    file4 = File.objects.create(path="/files/file4", created_date="2024-2-10", updated_date="2024-2-10",
                                owner=person_teacher1)  # FileForAnnouncement1

    """Announcement"""
    Announcement = apps.get_model("lms_api", "Announcement")

    announcement1 = Announcement.objects.create(created_date="2024-2-10", updated_date="2024-2-10",
                                                text="Оценка выставляется только по заданиям, загруженным в Домашку!",
                                                sender=person_teacher1, course=course1)
    announcement2 = Announcement.objects.create(created_date="2024-1-11", updated_date="2024-1-11",
                                                text="Удачи в новом семестре вместе с Домашкой", sender=person_teacher2,
                                                course=course2)
    announcement3 = Announcement.objects.create(created_date="2024-1-2", updated_date="2024-1-2",
                                                text="Ничего не понял, да и неинтересно", sender=person_teacher3,
                                                course=course3)

    """FileForResult"""
    result1.files.add(file1)

    """FileForTask"""
    task1.files.add(file2)

    """FileForCourse"""
    course1.files.add(file3)

    """FileForAnnouncement"""
    announcement1.files.add(file4)


class Migration(migrations.Migration):
    dependencies = [
        ('lms_api', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(fill_db),
    ]
